// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meet_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "meet_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pms {

namespace {

const ::google::protobuf::Descriptor* Login_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_reflection_ = NULL;
const ::google::protobuf::Descriptor* Logout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Logout_reflection_ = NULL;
const ::google::protobuf::Descriptor* Keep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Keep_reflection_ = NULL;
const ::google::protobuf::Descriptor* MeetMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MeetMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_meet_5fmsg_2eproto() {
  protobuf_AddDesc_meet_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "meet_msg.proto");
  GOOGLE_CHECK(file != NULL);
  Login_descriptor_ = file->message_type(0);
  static const int Login_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, usr_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, usr_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, usr_nname_),
  };
  Login_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Login_descriptor_,
      Login::default_instance_,
      Login_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Login));
  Logout_descriptor_ = file->message_type(1);
  static const int Logout_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logout, usr_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logout, usr_token_),
  };
  Logout_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Logout_descriptor_,
      Logout::default_instance_,
      Logout_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logout, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logout, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Logout));
  Keep_descriptor_ = file->message_type(2);
  static const int Keep_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Keep, usr_from_),
  };
  Keep_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Keep_descriptor_,
      Keep::default_instance_,
      Keep_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Keep, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Keep, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Keep));
  MeetMsg_descriptor_ = file->message_type(3);
  static const int MeetMsg_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, msg_head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, msg_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, usr_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, msg_cont_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, rom_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, rom_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, nck_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, usr_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, msg_seqs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, mem_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, usr_toto_),
  };
  MeetMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MeetMsg_descriptor_,
      MeetMsg::default_instance_,
      MeetMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MeetMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_meet_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Login_descriptor_, &Login::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Logout_descriptor_, &Logout::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Keep_descriptor_, &Keep::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MeetMsg_descriptor_, &MeetMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_meet_5fmsg_2eproto() {
  delete Login::default_instance_;
  delete Login_reflection_;
  delete Logout::default_instance_;
  delete Logout_reflection_;
  delete Keep::default_instance_;
  delete Keep_reflection_;
  delete MeetMsg::default_instance_;
  delete MeetMsg_reflection_;
}

void protobuf_AddDesc_meet_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::pms::protobuf_AddDesc_msg_5ftype_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016meet_msg.proto\022\003pms\032\016msg_type.proto\"\?\n"
    "\005Login\022\020\n\010usr_from\030\001 \001(\t\022\021\n\tusr_token\030\002 "
    "\001(\t\022\021\n\tusr_nname\030\003 \001(\t\"-\n\006Logout\022\020\n\010usr_"
    "from\030\001 \001(\t\022\021\n\tusr_token\030\002 \001(\t\"\030\n\004Keep\022\020\n"
    "\010usr_from\030\001 \001(\t\"\235\002\n\007MeetMsg\022%\n\010msg_head\030"
    "\001 \001(\0162\r.pms.EMsgHead:\004HSND\022$\n\007msg_tag\030\002 "
    "\001(\0162\014.pms.EMsgTag:\005TCHAT\022%\n\010msg_type\030\003 \001"
    "(\0162\r.pms.EMsgType:\004TMSG\022\020\n\010usr_from\030\004 \001("
    "\t\022\020\n\010msg_cont\030\005 \001(\t\022\016\n\006rom_id\030\006 \001(\t\022\020\n\010r"
    "om_name\030\007 \001(\t\022\020\n\010nck_name\030\010 \001(\t\022\021\n\tusr_t"
    "oken\030\t \001(\t\022\020\n\010msg_seqs\030\n \001(\022\022\017\n\007mem_num\030"
    "\013 \001(\021\022\020\n\010usr_toto\030\014 \001(\t", 463);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "meet_msg.proto", &protobuf_RegisterTypes);
  Login::default_instance_ = new Login();
  Logout::default_instance_ = new Logout();
  Keep::default_instance_ = new Keep();
  MeetMsg::default_instance_ = new MeetMsg();
  Login::default_instance_->InitAsDefaultInstance();
  Logout::default_instance_->InitAsDefaultInstance();
  Keep::default_instance_->InitAsDefaultInstance();
  MeetMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_meet_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_meet_5fmsg_2eproto {
  StaticDescriptorInitializer_meet_5fmsg_2eproto() {
    protobuf_AddDesc_meet_5fmsg_2eproto();
  }
} static_descriptor_initializer_meet_5fmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Login::kUsrFromFieldNumber;
const int Login::kUsrTokenFieldNumber;
const int Login::kUsrNnameFieldNumber;
#endif  // !_MSC_VER

Login::Login()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.Login)
}

void Login::InitAsDefaultInstance() {
}

Login::Login(const Login& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.Login)
}

void Login::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  usr_from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_nname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:pms.Login)
  SharedDtor();
}

void Login::SharedDtor() {
  if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_from_;
  }
  if (usr_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_token_;
  }
  if (usr_nname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_nname_;
  }
  if (this != default_instance_) {
  }
}

void Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_descriptor_;
}

const Login& Login::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_meet_5fmsg_2eproto();
  return *default_instance_;
}

Login* Login::default_instance_ = NULL;

Login* Login::New() const {
  return new Login;
}

void Login::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_usr_from()) {
      if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_from_->clear();
      }
    }
    if (has_usr_token()) {
      if (usr_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_token_->clear();
      }
    }
    if (has_usr_nname()) {
      if (usr_nname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_nname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string usr_from = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_from");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_usr_token;
        break;
      }

      // optional string usr_token = 2;
      case 2: {
        if (tag == 18) {
         parse_usr_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_token().data(), this->usr_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_usr_nname;
        break;
      }

      // optional string usr_nname = 3;
      case 3: {
        if (tag == 26) {
         parse_usr_nname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_nname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_nname().data(), this->usr_nname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_nname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.Login)
  return false;
#undef DO_
}

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.Login)
  // optional string usr_from = 1;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr_from(), output);
  }

  // optional string usr_token = 2;
  if (has_usr_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->usr_token(), output);
  }

  // optional string usr_nname = 3;
  if (has_usr_nname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_nname().data(), this->usr_nname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_nname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->usr_nname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pms.Login)
}

::google::protobuf::uint8* Login::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pms.Login)
  // optional string usr_from = 1;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->usr_from(), target);
  }

  // optional string usr_token = 2;
  if (has_usr_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->usr_token(), target);
  }

  // optional string usr_nname = 3;
  if (has_usr_nname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_nname().data(), this->usr_nname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_nname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->usr_nname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pms.Login)
  return target;
}

int Login::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string usr_from = 1;
    if (has_usr_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_from());
    }

    // optional string usr_token = 2;
    if (has_usr_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_token());
    }

    // optional string usr_nname = 3;
    if (has_usr_nname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_nname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Login* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Login*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Login::MergeFrom(const Login& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usr_from()) {
      set_usr_from(from.usr_from());
    }
    if (from.has_usr_token()) {
      set_usr_token(from.usr_token());
    }
    if (from.has_usr_nname()) {
      set_usr_nname(from.usr_nname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Login::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login::CopyFrom(const Login& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {

  return true;
}

void Login::Swap(Login* other) {
  if (other != this) {
    std::swap(usr_from_, other->usr_from_);
    std::swap(usr_token_, other->usr_token_);
    std::swap(usr_nname_, other->usr_nname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Login::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_descriptor_;
  metadata.reflection = Login_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Logout::kUsrFromFieldNumber;
const int Logout::kUsrTokenFieldNumber;
#endif  // !_MSC_VER

Logout::Logout()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.Logout)
}

void Logout::InitAsDefaultInstance() {
}

Logout::Logout(const Logout& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.Logout)
}

void Logout::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  usr_from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Logout::~Logout() {
  // @@protoc_insertion_point(destructor:pms.Logout)
  SharedDtor();
}

void Logout::SharedDtor() {
  if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_from_;
  }
  if (usr_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_token_;
  }
  if (this != default_instance_) {
  }
}

void Logout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Logout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Logout_descriptor_;
}

const Logout& Logout::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_meet_5fmsg_2eproto();
  return *default_instance_;
}

Logout* Logout::default_instance_ = NULL;

Logout* Logout::New() const {
  return new Logout;
}

void Logout::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_usr_from()) {
      if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_from_->clear();
      }
    }
    if (has_usr_token()) {
      if (usr_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_token_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Logout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.Logout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string usr_from = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_from");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_usr_token;
        break;
      }

      // optional string usr_token = 2;
      case 2: {
        if (tag == 18) {
         parse_usr_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_token().data(), this->usr_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.Logout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.Logout)
  return false;
#undef DO_
}

void Logout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.Logout)
  // optional string usr_from = 1;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr_from(), output);
  }

  // optional string usr_token = 2;
  if (has_usr_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->usr_token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pms.Logout)
}

::google::protobuf::uint8* Logout::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pms.Logout)
  // optional string usr_from = 1;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->usr_from(), target);
  }

  // optional string usr_token = 2;
  if (has_usr_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->usr_token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pms.Logout)
  return target;
}

int Logout::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string usr_from = 1;
    if (has_usr_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_from());
    }

    // optional string usr_token = 2;
    if (has_usr_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_token());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Logout::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Logout* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Logout*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Logout::MergeFrom(const Logout& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usr_from()) {
      set_usr_from(from.usr_from());
    }
    if (from.has_usr_token()) {
      set_usr_token(from.usr_token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Logout::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Logout::CopyFrom(const Logout& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Logout::IsInitialized() const {

  return true;
}

void Logout::Swap(Logout* other) {
  if (other != this) {
    std::swap(usr_from_, other->usr_from_);
    std::swap(usr_token_, other->usr_token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Logout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Logout_descriptor_;
  metadata.reflection = Logout_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Keep::kUsrFromFieldNumber;
#endif  // !_MSC_VER

Keep::Keep()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.Keep)
}

void Keep::InitAsDefaultInstance() {
}

Keep::Keep(const Keep& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.Keep)
}

void Keep::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  usr_from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Keep::~Keep() {
  // @@protoc_insertion_point(destructor:pms.Keep)
  SharedDtor();
}

void Keep::SharedDtor() {
  if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_from_;
  }
  if (this != default_instance_) {
  }
}

void Keep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Keep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Keep_descriptor_;
}

const Keep& Keep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_meet_5fmsg_2eproto();
  return *default_instance_;
}

Keep* Keep::default_instance_ = NULL;

Keep* Keep::New() const {
  return new Keep;
}

void Keep::Clear() {
  if (has_usr_from()) {
    if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      usr_from_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Keep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.Keep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string usr_from = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_from");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.Keep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.Keep)
  return false;
#undef DO_
}

void Keep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.Keep)
  // optional string usr_from = 1;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr_from(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pms.Keep)
}

::google::protobuf::uint8* Keep::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pms.Keep)
  // optional string usr_from = 1;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->usr_from(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pms.Keep)
  return target;
}

int Keep::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string usr_from = 1;
    if (has_usr_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_from());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Keep::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Keep* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Keep*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Keep::MergeFrom(const Keep& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_usr_from()) {
      set_usr_from(from.usr_from());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Keep::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Keep::CopyFrom(const Keep& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Keep::IsInitialized() const {

  return true;
}

void Keep::Swap(Keep* other) {
  if (other != this) {
    std::swap(usr_from_, other->usr_from_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Keep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Keep_descriptor_;
  metadata.reflection = Keep_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MeetMsg::kMsgHeadFieldNumber;
const int MeetMsg::kMsgTagFieldNumber;
const int MeetMsg::kMsgTypeFieldNumber;
const int MeetMsg::kUsrFromFieldNumber;
const int MeetMsg::kMsgContFieldNumber;
const int MeetMsg::kRomIdFieldNumber;
const int MeetMsg::kRomNameFieldNumber;
const int MeetMsg::kNckNameFieldNumber;
const int MeetMsg::kUsrTokenFieldNumber;
const int MeetMsg::kMsgSeqsFieldNumber;
const int MeetMsg::kMemNumFieldNumber;
const int MeetMsg::kUsrTotoFieldNumber;
#endif  // !_MSC_VER

MeetMsg::MeetMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.MeetMsg)
}

void MeetMsg::InitAsDefaultInstance() {
}

MeetMsg::MeetMsg(const MeetMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.MeetMsg)
}

void MeetMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_head_ = 1;
  msg_tag_ = 3;
  msg_type_ = 1;
  usr_from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_cont_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nck_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_seqs_ = GOOGLE_LONGLONG(0);
  mem_num_ = 0;
  usr_toto_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MeetMsg::~MeetMsg() {
  // @@protoc_insertion_point(destructor:pms.MeetMsg)
  SharedDtor();
}

void MeetMsg::SharedDtor() {
  if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_from_;
  }
  if (msg_cont_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_cont_;
  }
  if (rom_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rom_id_;
  }
  if (rom_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rom_name_;
  }
  if (nck_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nck_name_;
  }
  if (usr_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_token_;
  }
  if (usr_toto_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete usr_toto_;
  }
  if (this != default_instance_) {
  }
}

void MeetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeetMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MeetMsg_descriptor_;
}

const MeetMsg& MeetMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_meet_5fmsg_2eproto();
  return *default_instance_;
}

MeetMsg* MeetMsg::default_instance_ = NULL;

MeetMsg* MeetMsg::New() const {
  return new MeetMsg;
}

void MeetMsg::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    msg_head_ = 1;
    msg_tag_ = 3;
    msg_type_ = 1;
    if (has_usr_from()) {
      if (usr_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_from_->clear();
      }
    }
    if (has_msg_cont()) {
      if (msg_cont_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_cont_->clear();
      }
    }
    if (has_rom_id()) {
      if (rom_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rom_id_->clear();
      }
    }
    if (has_rom_name()) {
      if (rom_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rom_name_->clear();
      }
    }
    if (has_nck_name()) {
      if (nck_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nck_name_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 3840) {
    if (has_usr_token()) {
      if (usr_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_token_->clear();
      }
    }
    msg_seqs_ = GOOGLE_LONGLONG(0);
    mem_num_ = 0;
    if (has_usr_toto()) {
      if (usr_toto_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        usr_toto_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MeetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.MeetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pms.EMsgHead msg_head = 1 [default = HSND];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pms::EMsgHead_IsValid(value)) {
            set_msg_head(static_cast< ::pms::EMsgHead >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_tag;
        break;
      }

      // optional .pms.EMsgTag msg_tag = 2 [default = TCHAT];
      case 2: {
        if (tag == 16) {
         parse_msg_tag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pms::EMsgTag_IsValid(value)) {
            set_msg_tag(static_cast< ::pms::EMsgTag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msg_type;
        break;
      }

      // optional .pms.EMsgType msg_type = 3 [default = TMSG];
      case 3: {
        if (tag == 24) {
         parse_msg_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pms::EMsgType_IsValid(value)) {
            set_msg_type(static_cast< ::pms::EMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_usr_from;
        break;
      }

      // optional string usr_from = 4;
      case 4: {
        if (tag == 34) {
         parse_usr_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_from");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_msg_cont;
        break;
      }

      // optional string msg_cont = 5;
      case 5: {
        if (tag == 42) {
         parse_msg_cont:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_cont()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg_cont().data(), this->msg_cont().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg_cont");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_rom_id;
        break;
      }

      // optional string rom_id = 6;
      case 6: {
        if (tag == 50) {
         parse_rom_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rom_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rom_id().data(), this->rom_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rom_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_rom_name;
        break;
      }

      // optional string rom_name = 7;
      case 7: {
        if (tag == 58) {
         parse_rom_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rom_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rom_name().data(), this->rom_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rom_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_nck_name;
        break;
      }

      // optional string nck_name = 8;
      case 8: {
        if (tag == 66) {
         parse_nck_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nck_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nck_name().data(), this->nck_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nck_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_usr_token;
        break;
      }

      // optional string usr_token = 9;
      case 9: {
        if (tag == 74) {
         parse_usr_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_token().data(), this->usr_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_msg_seqs;
        break;
      }

      // optional sint64 msg_seqs = 10;
      case 10: {
        if (tag == 80) {
         parse_msg_seqs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &msg_seqs_)));
          set_has_msg_seqs();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_mem_num;
        break;
      }

      // optional sint32 mem_num = 11;
      case 11: {
        if (tag == 88) {
         parse_mem_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &mem_num_)));
          set_has_mem_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_usr_toto;
        break;
      }

      // optional string usr_toto = 12;
      case 12: {
        if (tag == 98) {
         parse_usr_toto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_toto()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usr_toto().data(), this->usr_toto().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "usr_toto");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.MeetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.MeetMsg)
  return false;
#undef DO_
}

void MeetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.MeetMsg)
  // optional .pms.EMsgHead msg_head = 1 [default = HSND];
  if (has_msg_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_head(), output);
  }

  // optional .pms.EMsgTag msg_tag = 2 [default = TCHAT];
  if (has_msg_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msg_tag(), output);
  }

  // optional .pms.EMsgType msg_type = 3 [default = TMSG];
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->msg_type(), output);
  }

  // optional string usr_from = 4;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->usr_from(), output);
  }

  // optional string msg_cont = 5;
  if (has_msg_cont()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_cont().data(), this->msg_cont().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_cont");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg_cont(), output);
  }

  // optional string rom_id = 6;
  if (has_rom_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rom_id().data(), this->rom_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rom_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->rom_id(), output);
  }

  // optional string rom_name = 7;
  if (has_rom_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rom_name().data(), this->rom_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rom_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->rom_name(), output);
  }

  // optional string nck_name = 8;
  if (has_nck_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nck_name().data(), this->nck_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nck_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nck_name(), output);
  }

  // optional string usr_token = 9;
  if (has_usr_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->usr_token(), output);
  }

  // optional sint64 msg_seqs = 10;
  if (has_msg_seqs()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(10, this->msg_seqs(), output);
  }

  // optional sint32 mem_num = 11;
  if (has_mem_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->mem_num(), output);
  }

  // optional string usr_toto = 12;
  if (has_usr_toto()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_toto().data(), this->usr_toto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_toto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->usr_toto(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pms.MeetMsg)
}

::google::protobuf::uint8* MeetMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pms.MeetMsg)
  // optional .pms.EMsgHead msg_head = 1 [default = HSND];
  if (has_msg_head()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_head(), target);
  }

  // optional .pms.EMsgTag msg_tag = 2 [default = TCHAT];
  if (has_msg_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msg_tag(), target);
  }

  // optional .pms.EMsgType msg_type = 3 [default = TMSG];
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->msg_type(), target);
  }

  // optional string usr_from = 4;
  if (has_usr_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->usr_from(), target);
  }

  // optional string msg_cont = 5;
  if (has_msg_cont()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg_cont().data(), this->msg_cont().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg_cont");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg_cont(), target);
  }

  // optional string rom_id = 6;
  if (has_rom_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rom_id().data(), this->rom_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rom_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rom_id(), target);
  }

  // optional string rom_name = 7;
  if (has_rom_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rom_name().data(), this->rom_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rom_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rom_name(), target);
  }

  // optional string nck_name = 8;
  if (has_nck_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nck_name().data(), this->nck_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nck_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nck_name(), target);
  }

  // optional string usr_token = 9;
  if (has_usr_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->usr_token(), target);
  }

  // optional sint64 msg_seqs = 10;
  if (has_msg_seqs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(10, this->msg_seqs(), target);
  }

  // optional sint32 mem_num = 11;
  if (has_mem_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->mem_num(), target);
  }

  // optional string usr_toto = 12;
  if (has_usr_toto()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usr_toto().data(), this->usr_toto().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "usr_toto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->usr_toto(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pms.MeetMsg)
  return target;
}

int MeetMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .pms.EMsgHead msg_head = 1 [default = HSND];
    if (has_msg_head()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_head());
    }

    // optional .pms.EMsgTag msg_tag = 2 [default = TCHAT];
    if (has_msg_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_tag());
    }

    // optional .pms.EMsgType msg_type = 3 [default = TMSG];
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
    }

    // optional string usr_from = 4;
    if (has_usr_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_from());
    }

    // optional string msg_cont = 5;
    if (has_msg_cont()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg_cont());
    }

    // optional string rom_id = 6;
    if (has_rom_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rom_id());
    }

    // optional string rom_name = 7;
    if (has_rom_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rom_name());
    }

    // optional string nck_name = 8;
    if (has_nck_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nck_name());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string usr_token = 9;
    if (has_usr_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_token());
    }

    // optional sint64 msg_seqs = 10;
    if (has_msg_seqs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->msg_seqs());
    }

    // optional sint32 mem_num = 11;
    if (has_mem_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->mem_num());
    }

    // optional string usr_toto = 12;
    if (has_usr_toto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usr_toto());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeetMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MeetMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MeetMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MeetMsg::MergeFrom(const MeetMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_head()) {
      set_msg_head(from.msg_head());
    }
    if (from.has_msg_tag()) {
      set_msg_tag(from.msg_tag());
    }
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_usr_from()) {
      set_usr_from(from.usr_from());
    }
    if (from.has_msg_cont()) {
      set_msg_cont(from.msg_cont());
    }
    if (from.has_rom_id()) {
      set_rom_id(from.rom_id());
    }
    if (from.has_rom_name()) {
      set_rom_name(from.rom_name());
    }
    if (from.has_nck_name()) {
      set_nck_name(from.nck_name());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_usr_token()) {
      set_usr_token(from.usr_token());
    }
    if (from.has_msg_seqs()) {
      set_msg_seqs(from.msg_seqs());
    }
    if (from.has_mem_num()) {
      set_mem_num(from.mem_num());
    }
    if (from.has_usr_toto()) {
      set_usr_toto(from.usr_toto());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MeetMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeetMsg::CopyFrom(const MeetMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeetMsg::IsInitialized() const {

  return true;
}

void MeetMsg::Swap(MeetMsg* other) {
  if (other != this) {
    std::swap(msg_head_, other->msg_head_);
    std::swap(msg_tag_, other->msg_tag_);
    std::swap(msg_type_, other->msg_type_);
    std::swap(usr_from_, other->usr_from_);
    std::swap(msg_cont_, other->msg_cont_);
    std::swap(rom_id_, other->rom_id_);
    std::swap(rom_name_, other->rom_name_);
    std::swap(nck_name_, other->nck_name_);
    std::swap(usr_token_, other->usr_token_);
    std::swap(msg_seqs_, other->msg_seqs_);
    std::swap(mem_num_, other->mem_num_);
    std::swap(usr_toto_, other->usr_toto_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MeetMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MeetMsg_descriptor_;
  metadata.reflection = MeetMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pms

// @@protoc_insertion_point(global_scope)
