// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meet_msg_type.proto

package org.dync.teameeting.sdkmsgclient;

public final class MeetMsgType {
  private MeetMsgType() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * the msg content type
   * </pre>
   *
   * Protobuf enum {@code EMsgType}
   */
  public enum EMsgType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TMSG = 0;</code>
     */
    TMSG(0),
    /**
     * <code>TFILE = 1;</code>
     */
    TFILE(1),
    /**
     * <code>TPIC = 2;</code>
     */
    TPIC(2),
    /**
     * <code>TAUD = 3;</code>
     */
    TAUD(3),
    /**
     * <code>TVID = 4;</code>
     */
    TVID(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TMSG = 0;</code>
     */
    public static final int TMSG_VALUE = 0;
    /**
     * <code>TFILE = 1;</code>
     */
    public static final int TFILE_VALUE = 1;
    /**
     * <code>TPIC = 2;</code>
     */
    public static final int TPIC_VALUE = 2;
    /**
     * <code>TAUD = 3;</code>
     */
    public static final int TAUD_VALUE = 3;
    /**
     * <code>TVID = 4;</code>
     */
    public static final int TVID_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EMsgType valueOf(int value) {
      return forNumber(value);
    }

    public static EMsgType forNumber(int value) {
      switch (value) {
        case 0: return TMSG;
        case 1: return TFILE;
        case 2: return TPIC;
        case 3: return TAUD;
        case 4: return TVID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EMsgType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMsgType>() {
            public EMsgType findValueByNumber(int number) {
              return EMsgType.forNumber(number);
            }
          };

    private final int value;

    private EMsgType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMsgType)
  }

  /**
   * <pre>
   * the msg tag
   * </pre>
   *
   * Protobuf enum {@code EMsgTag}
   */
  public enum EMsgTag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TENTER = 0;</code>
     */
    TENTER(0),
    /**
     * <code>TLEAVE = 1;</code>
     */
    TLEAVE(1),
    /**
     * <code>TCHAT = 2;</code>
     */
    TCHAT(2),
    /**
     * <code>TNOTIFY = 3;</code>
     */
    TNOTIFY(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TENTER = 0;</code>
     */
    public static final int TENTER_VALUE = 0;
    /**
     * <code>TLEAVE = 1;</code>
     */
    public static final int TLEAVE_VALUE = 1;
    /**
     * <code>TCHAT = 2;</code>
     */
    public static final int TCHAT_VALUE = 2;
    /**
     * <code>TNOTIFY = 3;</code>
     */
    public static final int TNOTIFY_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EMsgTag valueOf(int value) {
      return forNumber(value);
    }

    public static EMsgTag forNumber(int value) {
      switch (value) {
        case 0: return TENTER;
        case 1: return TLEAVE;
        case 2: return TCHAT;
        case 3: return TNOTIFY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMsgTag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EMsgTag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMsgTag>() {
            public EMsgTag findValueByNumber(int number) {
              return EMsgTag.forNumber(number);
            }
          };

    private final int value;

    private EMsgTag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMsgTag)
  }

  /**
   * <pre>
   * the msg get tag
   * </pre>
   *
   * Protobuf enum {@code EMsgHead}
   */
  public enum EMsgHead
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>HSND = 0;</code>
     */
    HSND(0),
    /**
     * <code>HGET = 1;</code>
     */
    HGET(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>HSND = 0;</code>
     */
    public static final int HSND_VALUE = 0;
    /**
     * <code>HGET = 1;</code>
     */
    public static final int HGET_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EMsgHead valueOf(int value) {
      return forNumber(value);
    }

    public static EMsgHead forNumber(int value) {
      switch (value) {
        case 0: return HSND;
        case 1: return HGET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMsgHead>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EMsgHead> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMsgHead>() {
            public EMsgHead findValueByNumber(int number) {
              return EMsgHead.forNumber(number);
            }
          };

    private final int value;

    private EMsgHead(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMsgHead)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
