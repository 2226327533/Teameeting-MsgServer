// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "entity_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace pms {

void protobuf_ShutdownFile_entity_5fmsg_2eproto() {
  delete Login::default_instance_;
  delete Logout::default_instance_;
  delete Keep::default_instance_;
  delete Entity::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_entity_5fmsg_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_entity_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::pms::protobuf_AddDesc_common_5fmsg_2eproto();
  ::pms::protobuf_AddDesc_entity_5fmsg_5ftype_2eproto();
  Login::default_instance_ = new Login();
  Logout::default_instance_ = new Logout();
  Keep::default_instance_ = new Keep();
  Entity::default_instance_ = new Entity();
  Login::default_instance_->InitAsDefaultInstance();
  Logout::default_instance_->InitAsDefaultInstance();
  Keep::default_instance_->InitAsDefaultInstance();
  Entity::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_entity_5fmsg_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_entity_5fmsg_2eproto_once_);
void protobuf_AddDesc_entity_5fmsg_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_entity_5fmsg_2eproto_once_,
                 &protobuf_AddDesc_entity_5fmsg_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_entity_5fmsg_2eproto {
  StaticDescriptorInitializer_entity_5fmsg_2eproto() {
    protobuf_AddDesc_entity_5fmsg_2eproto();
  }
} static_descriptor_initializer_entity_5fmsg_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login::kUsrFromFieldNumber;
const int Login::kUsrTokenFieldNumber;
const int Login::kUsrNnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login::Login()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.Login)
}

void Login::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login::Login(const Login& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.Login)
}

void Login::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  usr_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_nname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:pms.Login)
  SharedDtor();
}

void Login::SharedDtor() {
  usr_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_nname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Login& Login::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_entity_5fmsg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_entity_5fmsg_2eproto();
#endif
  return *default_instance_;
}

Login* Login::default_instance_ = NULL;

Login* Login::New(::google::protobuf::Arena* arena) const {
  Login* n = new Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login::Clear() {
// @@protoc_insertion_point(message_clear_start:pms.Login)
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_nname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string usr_from = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Login.usr_from"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_usr_token;
        break;
      }

      // optional string usr_token = 2;
      case 2: {
        if (tag == 18) {
         parse_usr_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_token().data(), this->usr_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Login.usr_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_usr_nname;
        break;
      }

      // optional string usr_nname = 3;
      case 3: {
        if (tag == 26) {
         parse_usr_nname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_nname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_nname().data(), this->usr_nname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Login.usr_nname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.Login)
  return false;
#undef DO_
}

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.Login)
  // optional string usr_from = 1;
  if (this->usr_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Login.usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr_from(), output);
  }

  // optional string usr_token = 2;
  if (this->usr_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Login.usr_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->usr_token(), output);
  }

  // optional string usr_nname = 3;
  if (this->usr_nname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_nname().data(), this->usr_nname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Login.usr_nname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->usr_nname(), output);
  }

  // @@protoc_insertion_point(serialize_end:pms.Login)
}

int Login::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pms.Login)
  int total_size = 0;

  // optional string usr_from = 1;
  if (this->usr_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_from());
  }

  // optional string usr_token = 2;
  if (this->usr_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_token());
  }

  // optional string usr_nname = 3;
  if (this->usr_nname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_nname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Login*>(&from));
}

void Login::MergeFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pms.Login)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.usr_from().size() > 0) {

    usr_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_from_);
  }
  if (from.usr_token().size() > 0) {

    usr_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_token_);
  }
  if (from.usr_nname().size() > 0) {

    usr_nname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_nname_);
  }
}

void Login::CopyFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pms.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {

  return true;
}

void Login::Swap(Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login::InternalSwap(Login* other) {
  usr_from_.Swap(&other->usr_from_);
  usr_token_.Swap(&other->usr_token_);
  usr_nname_.Swap(&other->usr_nname_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Login::GetTypeName() const {
  return "pms.Login";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login

// optional string usr_from = 1;
void Login::clear_usr_from() {
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login::usr_from() const {
  // @@protoc_insertion_point(field_get:pms.Login.usr_from)
  return usr_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login::set_usr_from(const ::std::string& value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Login.usr_from)
}
 void Login::set_usr_from(const char* value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Login.usr_from)
}
 void Login::set_usr_from(const char* value, size_t size) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Login.usr_from)
}
 ::std::string* Login::mutable_usr_from() {
  
  // @@protoc_insertion_point(field_mutable:pms.Login.usr_from)
  return usr_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login::release_usr_from() {
  // @@protoc_insertion_point(field_release:pms.Login.usr_from)
  
  return usr_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login::set_allocated_usr_from(::std::string* usr_from) {
  if (usr_from != NULL) {
    
  } else {
    
  }
  usr_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_from);
  // @@protoc_insertion_point(field_set_allocated:pms.Login.usr_from)
}

// optional string usr_token = 2;
void Login::clear_usr_token() {
  usr_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login::usr_token() const {
  // @@protoc_insertion_point(field_get:pms.Login.usr_token)
  return usr_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login::set_usr_token(const ::std::string& value) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Login.usr_token)
}
 void Login::set_usr_token(const char* value) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Login.usr_token)
}
 void Login::set_usr_token(const char* value, size_t size) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Login.usr_token)
}
 ::std::string* Login::mutable_usr_token() {
  
  // @@protoc_insertion_point(field_mutable:pms.Login.usr_token)
  return usr_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login::release_usr_token() {
  // @@protoc_insertion_point(field_release:pms.Login.usr_token)
  
  return usr_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login::set_allocated_usr_token(::std::string* usr_token) {
  if (usr_token != NULL) {
    
  } else {
    
  }
  usr_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_token);
  // @@protoc_insertion_point(field_set_allocated:pms.Login.usr_token)
}

// optional string usr_nname = 3;
void Login::clear_usr_nname() {
  usr_nname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login::usr_nname() const {
  // @@protoc_insertion_point(field_get:pms.Login.usr_nname)
  return usr_nname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login::set_usr_nname(const ::std::string& value) {
  
  usr_nname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Login.usr_nname)
}
 void Login::set_usr_nname(const char* value) {
  
  usr_nname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Login.usr_nname)
}
 void Login::set_usr_nname(const char* value, size_t size) {
  
  usr_nname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Login.usr_nname)
}
 ::std::string* Login::mutable_usr_nname() {
  
  // @@protoc_insertion_point(field_mutable:pms.Login.usr_nname)
  return usr_nname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login::release_usr_nname() {
  // @@protoc_insertion_point(field_release:pms.Login.usr_nname)
  
  return usr_nname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login::set_allocated_usr_nname(::std::string* usr_nname) {
  if (usr_nname != NULL) {
    
  } else {
    
  }
  usr_nname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_nname);
  // @@protoc_insertion_point(field_set_allocated:pms.Login.usr_nname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Logout::kUsrFromFieldNumber;
const int Logout::kUsrTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Logout::Logout()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.Logout)
}

void Logout::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Logout::Logout(const Logout& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.Logout)
}

void Logout::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  usr_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Logout::~Logout() {
  // @@protoc_insertion_point(destructor:pms.Logout)
  SharedDtor();
}

void Logout::SharedDtor() {
  usr_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Logout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Logout& Logout::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_entity_5fmsg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_entity_5fmsg_2eproto();
#endif
  return *default_instance_;
}

Logout* Logout::default_instance_ = NULL;

Logout* Logout::New(::google::protobuf::Arena* arena) const {
  Logout* n = new Logout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Logout::Clear() {
// @@protoc_insertion_point(message_clear_start:pms.Logout)
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Logout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.Logout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string usr_from = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Logout.usr_from"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_usr_token;
        break;
      }

      // optional string usr_token = 2;
      case 2: {
        if (tag == 18) {
         parse_usr_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_token().data(), this->usr_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Logout.usr_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.Logout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.Logout)
  return false;
#undef DO_
}

void Logout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.Logout)
  // optional string usr_from = 1;
  if (this->usr_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Logout.usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr_from(), output);
  }

  // optional string usr_token = 2;
  if (this->usr_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Logout.usr_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->usr_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:pms.Logout)
}

int Logout::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pms.Logout)
  int total_size = 0;

  // optional string usr_from = 1;
  if (this->usr_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_from());
  }

  // optional string usr_token = 2;
  if (this->usr_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_token());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Logout::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Logout*>(&from));
}

void Logout::MergeFrom(const Logout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pms.Logout)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.usr_from().size() > 0) {

    usr_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_from_);
  }
  if (from.usr_token().size() > 0) {

    usr_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_token_);
  }
}

void Logout::CopyFrom(const Logout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pms.Logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Logout::IsInitialized() const {

  return true;
}

void Logout::Swap(Logout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Logout::InternalSwap(Logout* other) {
  usr_from_.Swap(&other->usr_from_);
  usr_token_.Swap(&other->usr_token_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Logout::GetTypeName() const {
  return "pms.Logout";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Logout

// optional string usr_from = 1;
void Logout::clear_usr_from() {
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Logout::usr_from() const {
  // @@protoc_insertion_point(field_get:pms.Logout.usr_from)
  return usr_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Logout::set_usr_from(const ::std::string& value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Logout.usr_from)
}
 void Logout::set_usr_from(const char* value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Logout.usr_from)
}
 void Logout::set_usr_from(const char* value, size_t size) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Logout.usr_from)
}
 ::std::string* Logout::mutable_usr_from() {
  
  // @@protoc_insertion_point(field_mutable:pms.Logout.usr_from)
  return usr_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Logout::release_usr_from() {
  // @@protoc_insertion_point(field_release:pms.Logout.usr_from)
  
  return usr_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Logout::set_allocated_usr_from(::std::string* usr_from) {
  if (usr_from != NULL) {
    
  } else {
    
  }
  usr_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_from);
  // @@protoc_insertion_point(field_set_allocated:pms.Logout.usr_from)
}

// optional string usr_token = 2;
void Logout::clear_usr_token() {
  usr_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Logout::usr_token() const {
  // @@protoc_insertion_point(field_get:pms.Logout.usr_token)
  return usr_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Logout::set_usr_token(const ::std::string& value) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Logout.usr_token)
}
 void Logout::set_usr_token(const char* value) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Logout.usr_token)
}
 void Logout::set_usr_token(const char* value, size_t size) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Logout.usr_token)
}
 ::std::string* Logout::mutable_usr_token() {
  
  // @@protoc_insertion_point(field_mutable:pms.Logout.usr_token)
  return usr_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Logout::release_usr_token() {
  // @@protoc_insertion_point(field_release:pms.Logout.usr_token)
  
  return usr_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Logout::set_allocated_usr_token(::std::string* usr_token) {
  if (usr_token != NULL) {
    
  } else {
    
  }
  usr_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_token);
  // @@protoc_insertion_point(field_set_allocated:pms.Logout.usr_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Keep::kUsrFromFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Keep::Keep()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.Keep)
}

void Keep::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Keep::Keep(const Keep& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.Keep)
}

void Keep::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  usr_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Keep::~Keep() {
  // @@protoc_insertion_point(destructor:pms.Keep)
  SharedDtor();
}

void Keep::SharedDtor() {
  usr_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Keep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Keep& Keep::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_entity_5fmsg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_entity_5fmsg_2eproto();
#endif
  return *default_instance_;
}

Keep* Keep::default_instance_ = NULL;

Keep* Keep::New(::google::protobuf::Arena* arena) const {
  Keep* n = new Keep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Keep::Clear() {
// @@protoc_insertion_point(message_clear_start:pms.Keep)
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Keep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.Keep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string usr_from = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Keep.usr_from"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.Keep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.Keep)
  return false;
#undef DO_
}

void Keep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.Keep)
  // optional string usr_from = 1;
  if (this->usr_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Keep.usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->usr_from(), output);
  }

  // @@protoc_insertion_point(serialize_end:pms.Keep)
}

int Keep::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pms.Keep)
  int total_size = 0;

  // optional string usr_from = 1;
  if (this->usr_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_from());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Keep::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Keep*>(&from));
}

void Keep::MergeFrom(const Keep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pms.Keep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.usr_from().size() > 0) {

    usr_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_from_);
  }
}

void Keep::CopyFrom(const Keep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pms.Keep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Keep::IsInitialized() const {

  return true;
}

void Keep::Swap(Keep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Keep::InternalSwap(Keep* other) {
  usr_from_.Swap(&other->usr_from_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Keep::GetTypeName() const {
  return "pms.Keep";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Keep

// optional string usr_from = 1;
void Keep::clear_usr_from() {
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Keep::usr_from() const {
  // @@protoc_insertion_point(field_get:pms.Keep.usr_from)
  return usr_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Keep::set_usr_from(const ::std::string& value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Keep.usr_from)
}
 void Keep::set_usr_from(const char* value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Keep.usr_from)
}
 void Keep::set_usr_from(const char* value, size_t size) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Keep.usr_from)
}
 ::std::string* Keep::mutable_usr_from() {
  
  // @@protoc_insertion_point(field_mutable:pms.Keep.usr_from)
  return usr_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Keep::release_usr_from() {
  // @@protoc_insertion_point(field_release:pms.Keep.usr_from)
  
  return usr_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Keep::set_allocated_usr_from(::std::string* usr_from) {
  if (usr_from != NULL) {
    
  } else {
    
  }
  usr_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_from);
  // @@protoc_insertion_point(field_set_allocated:pms.Keep.usr_from)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kMsgHeadFieldNumber;
const int Entity::kMsgTagFieldNumber;
const int Entity::kMsgTypeFieldNumber;
const int Entity::kMsgFlagFieldNumber;
const int Entity::kUsrFromFieldNumber;
const int Entity::kMsgContFieldNumber;
const int Entity::kRomIdFieldNumber;
const int Entity::kRomNameFieldNumber;
const int Entity::kNckNameFieldNumber;
const int Entity::kUsrTokenFieldNumber;
const int Entity::kCmsgIdFieldNumber;
const int Entity::kExtraFieldNumber;
const int Entity::kMsgTimeFieldNumber;
const int Entity::kUsrTotoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.Entity)
}

void Entity::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  usr_toto_ = const_cast< ::pms::ToUser*>(
      ::pms::ToUser::internal_default_instance());
#else
  usr_toto_ = const_cast< ::pms::ToUser*>(&::pms::ToUser::default_instance());
#endif
}

Entity::Entity(const Entity& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.Entity)
}

void Entity::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_head_ = 0;
  msg_tag_ = 0;
  msg_type_ = 0;
  msg_flag_ = 0;
  usr_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_cont_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nck_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmsg_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_time_ = 0u;
  usr_toto_ = NULL;
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:pms.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  usr_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_cont_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nck_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmsg_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete usr_toto_;
  }
}

void Entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Entity& Entity::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_entity_5fmsg_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_entity_5fmsg_2eproto();
#endif
  return *default_instance_;
}

Entity* Entity::default_instance_ = NULL;

Entity* Entity::New(::google::protobuf::Arena* arena) const {
  Entity* n = new Entity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:pms.Entity)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Entity, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Entity*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msg_head_, msg_flag_);
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_cont_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rom_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nck_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  usr_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmsg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_time_ = 0u;
  if (GetArenaNoVirtual() == NULL && usr_toto_ != NULL) delete usr_toto_;
  usr_toto_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.Entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pms.EMsgHead msg_head = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_head(static_cast< ::pms::EMsgHead >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_tag;
        break;
      }

      // optional .pms.EMsgTag msg_tag = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_tag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_tag(static_cast< ::pms::EMsgTag >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msg_type;
        break;
      }

      // optional .pms.EMsgType msg_type = 3;
      case 3: {
        if (tag == 24) {
         parse_msg_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::pms::EMsgType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msg_flag;
        break;
      }

      // optional .pms.EMsgFlag msg_flag = 4;
      case 4: {
        if (tag == 32) {
         parse_msg_flag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_flag(static_cast< ::pms::EMsgFlag >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_usr_from;
        break;
      }

      // optional string usr_from = 5;
      case 5: {
        if (tag == 42) {
         parse_usr_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_from().data(), this->usr_from().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.usr_from"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_msg_cont;
        break;
      }

      // optional string msg_cont = 6;
      case 6: {
        if (tag == 50) {
         parse_msg_cont:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg_cont()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg_cont().data(), this->msg_cont().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.msg_cont"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_rom_id;
        break;
      }

      // optional string rom_id = 7;
      case 7: {
        if (tag == 58) {
         parse_rom_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rom_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rom_id().data(), this->rom_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.rom_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_rom_name;
        break;
      }

      // optional string rom_name = 8;
      case 8: {
        if (tag == 66) {
         parse_rom_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rom_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rom_name().data(), this->rom_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.rom_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_nck_name;
        break;
      }

      // optional string nck_name = 9;
      case 9: {
        if (tag == 74) {
         parse_nck_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nck_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nck_name().data(), this->nck_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.nck_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_usr_token;
        break;
      }

      // optional string usr_token = 10;
      case 10: {
        if (tag == 82) {
         parse_usr_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usr_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->usr_token().data(), this->usr_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.usr_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_cmsg_id;
        break;
      }

      // optional string cmsg_id = 11;
      case 11: {
        if (tag == 90) {
         parse_cmsg_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmsg_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmsg_id().data(), this->cmsg_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.cmsg_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_extra;
        break;
      }

      // optional string extra = 12;
      case 12: {
        if (tag == 98) {
         parse_extra:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra().data(), this->extra().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pms.Entity.extra"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_msg_time;
        break;
      }

      // optional uint32 msg_time = 13;
      case 13: {
        if (tag == 104) {
         parse_msg_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_usr_toto;
        break;
      }

      // optional .pms.ToUser usr_toto = 14;
      case 14: {
        if (tag == 114) {
         parse_usr_toto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_usr_toto()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.Entity)
  // optional .pms.EMsgHead msg_head = 1;
  if (this->msg_head() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_head(), output);
  }

  // optional .pms.EMsgTag msg_tag = 2;
  if (this->msg_tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msg_tag(), output);
  }

  // optional .pms.EMsgType msg_type = 3;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->msg_type(), output);
  }

  // optional .pms.EMsgFlag msg_flag = 4;
  if (this->msg_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->msg_flag(), output);
  }

  // optional string usr_from = 5;
  if (this->usr_from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_from().data(), this->usr_from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.usr_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->usr_from(), output);
  }

  // optional string msg_cont = 6;
  if (this->msg_cont().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg_cont().data(), this->msg_cont().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.msg_cont");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg_cont(), output);
  }

  // optional string rom_id = 7;
  if (this->rom_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rom_id().data(), this->rom_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.rom_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->rom_id(), output);
  }

  // optional string rom_name = 8;
  if (this->rom_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rom_name().data(), this->rom_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.rom_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->rom_name(), output);
  }

  // optional string nck_name = 9;
  if (this->nck_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nck_name().data(), this->nck_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.nck_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->nck_name(), output);
  }

  // optional string usr_token = 10;
  if (this->usr_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->usr_token().data(), this->usr_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.usr_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->usr_token(), output);
  }

  // optional string cmsg_id = 11;
  if (this->cmsg_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmsg_id().data(), this->cmsg_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.cmsg_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->cmsg_id(), output);
  }

  // optional string extra = 12;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pms.Entity.extra");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->extra(), output);
  }

  // optional uint32 msg_time = 13;
  if (this->msg_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->msg_time(), output);
  }

  // optional .pms.ToUser usr_toto = 14;
  if (this->has_usr_toto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, *this->usr_toto_, output);
  }

  // @@protoc_insertion_point(serialize_end:pms.Entity)
}

int Entity::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pms.Entity)
  int total_size = 0;

  // optional .pms.EMsgHead msg_head = 1;
  if (this->msg_head() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_head());
  }

  // optional .pms.EMsgTag msg_tag = 2;
  if (this->msg_tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_tag());
  }

  // optional .pms.EMsgType msg_type = 3;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  // optional .pms.EMsgFlag msg_flag = 4;
  if (this->msg_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_flag());
  }

  // optional string usr_from = 5;
  if (this->usr_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_from());
  }

  // optional string msg_cont = 6;
  if (this->msg_cont().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg_cont());
  }

  // optional string rom_id = 7;
  if (this->rom_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rom_id());
  }

  // optional string rom_name = 8;
  if (this->rom_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rom_name());
  }

  // optional string nck_name = 9;
  if (this->nck_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nck_name());
  }

  // optional string usr_token = 10;
  if (this->usr_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usr_token());
  }

  // optional string cmsg_id = 11;
  if (this->cmsg_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmsg_id());
  }

  // optional string extra = 12;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra());
  }

  // optional uint32 msg_time = 13;
  if (this->msg_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_time());
  }

  // optional .pms.ToUser usr_toto = 14;
  if (this->has_usr_toto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->usr_toto_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entity::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Entity*>(&from));
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pms.Entity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.msg_head() != 0) {
    set_msg_head(from.msg_head());
  }
  if (from.msg_tag() != 0) {
    set_msg_tag(from.msg_tag());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.msg_flag() != 0) {
    set_msg_flag(from.msg_flag());
  }
  if (from.usr_from().size() > 0) {

    usr_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_from_);
  }
  if (from.msg_cont().size() > 0) {

    msg_cont_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_cont_);
  }
  if (from.rom_id().size() > 0) {

    rom_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rom_id_);
  }
  if (from.rom_name().size() > 0) {

    rom_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rom_name_);
  }
  if (from.nck_name().size() > 0) {

    nck_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nck_name_);
  }
  if (from.usr_token().size() > 0) {

    usr_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usr_token_);
  }
  if (from.cmsg_id().size() > 0) {

    cmsg_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmsg_id_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.msg_time() != 0) {
    set_msg_time(from.msg_time());
  }
  if (from.has_usr_toto()) {
    mutable_usr_toto()->::pms::ToUser::MergeFrom(from.usr_toto());
  }
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pms.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entity::IsInitialized() const {

  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  std::swap(msg_head_, other->msg_head_);
  std::swap(msg_tag_, other->msg_tag_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(msg_flag_, other->msg_flag_);
  usr_from_.Swap(&other->usr_from_);
  msg_cont_.Swap(&other->msg_cont_);
  rom_id_.Swap(&other->rom_id_);
  rom_name_.Swap(&other->rom_name_);
  nck_name_.Swap(&other->nck_name_);
  usr_token_.Swap(&other->usr_token_);
  cmsg_id_.Swap(&other->cmsg_id_);
  extra_.Swap(&other->extra_);
  std::swap(msg_time_, other->msg_time_);
  std::swap(usr_toto_, other->usr_toto_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Entity::GetTypeName() const {
  return "pms.Entity";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Entity

// optional .pms.EMsgHead msg_head = 1;
void Entity::clear_msg_head() {
  msg_head_ = 0;
}
 ::pms::EMsgHead Entity::msg_head() const {
  // @@protoc_insertion_point(field_get:pms.Entity.msg_head)
  return static_cast< ::pms::EMsgHead >(msg_head_);
}
 void Entity::set_msg_head(::pms::EMsgHead value) {
  
  msg_head_ = value;
  // @@protoc_insertion_point(field_set:pms.Entity.msg_head)
}

// optional .pms.EMsgTag msg_tag = 2;
void Entity::clear_msg_tag() {
  msg_tag_ = 0;
}
 ::pms::EMsgTag Entity::msg_tag() const {
  // @@protoc_insertion_point(field_get:pms.Entity.msg_tag)
  return static_cast< ::pms::EMsgTag >(msg_tag_);
}
 void Entity::set_msg_tag(::pms::EMsgTag value) {
  
  msg_tag_ = value;
  // @@protoc_insertion_point(field_set:pms.Entity.msg_tag)
}

// optional .pms.EMsgType msg_type = 3;
void Entity::clear_msg_type() {
  msg_type_ = 0;
}
 ::pms::EMsgType Entity::msg_type() const {
  // @@protoc_insertion_point(field_get:pms.Entity.msg_type)
  return static_cast< ::pms::EMsgType >(msg_type_);
}
 void Entity::set_msg_type(::pms::EMsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:pms.Entity.msg_type)
}

// optional .pms.EMsgFlag msg_flag = 4;
void Entity::clear_msg_flag() {
  msg_flag_ = 0;
}
 ::pms::EMsgFlag Entity::msg_flag() const {
  // @@protoc_insertion_point(field_get:pms.Entity.msg_flag)
  return static_cast< ::pms::EMsgFlag >(msg_flag_);
}
 void Entity::set_msg_flag(::pms::EMsgFlag value) {
  
  msg_flag_ = value;
  // @@protoc_insertion_point(field_set:pms.Entity.msg_flag)
}

// optional string usr_from = 5;
void Entity::clear_usr_from() {
  usr_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::usr_from() const {
  // @@protoc_insertion_point(field_get:pms.Entity.usr_from)
  return usr_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_usr_from(const ::std::string& value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.usr_from)
}
 void Entity::set_usr_from(const char* value) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.usr_from)
}
 void Entity::set_usr_from(const char* value, size_t size) {
  
  usr_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.usr_from)
}
 ::std::string* Entity::mutable_usr_from() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.usr_from)
  return usr_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_usr_from() {
  // @@protoc_insertion_point(field_release:pms.Entity.usr_from)
  
  return usr_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_usr_from(::std::string* usr_from) {
  if (usr_from != NULL) {
    
  } else {
    
  }
  usr_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_from);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.usr_from)
}

// optional string msg_cont = 6;
void Entity::clear_msg_cont() {
  msg_cont_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::msg_cont() const {
  // @@protoc_insertion_point(field_get:pms.Entity.msg_cont)
  return msg_cont_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_msg_cont(const ::std::string& value) {
  
  msg_cont_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.msg_cont)
}
 void Entity::set_msg_cont(const char* value) {
  
  msg_cont_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.msg_cont)
}
 void Entity::set_msg_cont(const char* value, size_t size) {
  
  msg_cont_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.msg_cont)
}
 ::std::string* Entity::mutable_msg_cont() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.msg_cont)
  return msg_cont_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_msg_cont() {
  // @@protoc_insertion_point(field_release:pms.Entity.msg_cont)
  
  return msg_cont_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_msg_cont(::std::string* msg_cont) {
  if (msg_cont != NULL) {
    
  } else {
    
  }
  msg_cont_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_cont);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.msg_cont)
}

// optional string rom_id = 7;
void Entity::clear_rom_id() {
  rom_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::rom_id() const {
  // @@protoc_insertion_point(field_get:pms.Entity.rom_id)
  return rom_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_rom_id(const ::std::string& value) {
  
  rom_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.rom_id)
}
 void Entity::set_rom_id(const char* value) {
  
  rom_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.rom_id)
}
 void Entity::set_rom_id(const char* value, size_t size) {
  
  rom_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.rom_id)
}
 ::std::string* Entity::mutable_rom_id() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.rom_id)
  return rom_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_rom_id() {
  // @@protoc_insertion_point(field_release:pms.Entity.rom_id)
  
  return rom_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_rom_id(::std::string* rom_id) {
  if (rom_id != NULL) {
    
  } else {
    
  }
  rom_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rom_id);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.rom_id)
}

// optional string rom_name = 8;
void Entity::clear_rom_name() {
  rom_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::rom_name() const {
  // @@protoc_insertion_point(field_get:pms.Entity.rom_name)
  return rom_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_rom_name(const ::std::string& value) {
  
  rom_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.rom_name)
}
 void Entity::set_rom_name(const char* value) {
  
  rom_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.rom_name)
}
 void Entity::set_rom_name(const char* value, size_t size) {
  
  rom_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.rom_name)
}
 ::std::string* Entity::mutable_rom_name() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.rom_name)
  return rom_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_rom_name() {
  // @@protoc_insertion_point(field_release:pms.Entity.rom_name)
  
  return rom_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_rom_name(::std::string* rom_name) {
  if (rom_name != NULL) {
    
  } else {
    
  }
  rom_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rom_name);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.rom_name)
}

// optional string nck_name = 9;
void Entity::clear_nck_name() {
  nck_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::nck_name() const {
  // @@protoc_insertion_point(field_get:pms.Entity.nck_name)
  return nck_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_nck_name(const ::std::string& value) {
  
  nck_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.nck_name)
}
 void Entity::set_nck_name(const char* value) {
  
  nck_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.nck_name)
}
 void Entity::set_nck_name(const char* value, size_t size) {
  
  nck_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.nck_name)
}
 ::std::string* Entity::mutable_nck_name() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.nck_name)
  return nck_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_nck_name() {
  // @@protoc_insertion_point(field_release:pms.Entity.nck_name)
  
  return nck_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_nck_name(::std::string* nck_name) {
  if (nck_name != NULL) {
    
  } else {
    
  }
  nck_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nck_name);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.nck_name)
}

// optional string usr_token = 10;
void Entity::clear_usr_token() {
  usr_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::usr_token() const {
  // @@protoc_insertion_point(field_get:pms.Entity.usr_token)
  return usr_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_usr_token(const ::std::string& value) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.usr_token)
}
 void Entity::set_usr_token(const char* value) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.usr_token)
}
 void Entity::set_usr_token(const char* value, size_t size) {
  
  usr_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.usr_token)
}
 ::std::string* Entity::mutable_usr_token() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.usr_token)
  return usr_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_usr_token() {
  // @@protoc_insertion_point(field_release:pms.Entity.usr_token)
  
  return usr_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_usr_token(::std::string* usr_token) {
  if (usr_token != NULL) {
    
  } else {
    
  }
  usr_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), usr_token);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.usr_token)
}

// optional string cmsg_id = 11;
void Entity::clear_cmsg_id() {
  cmsg_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::cmsg_id() const {
  // @@protoc_insertion_point(field_get:pms.Entity.cmsg_id)
  return cmsg_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_cmsg_id(const ::std::string& value) {
  
  cmsg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.cmsg_id)
}
 void Entity::set_cmsg_id(const char* value) {
  
  cmsg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.cmsg_id)
}
 void Entity::set_cmsg_id(const char* value, size_t size) {
  
  cmsg_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.cmsg_id)
}
 ::std::string* Entity::mutable_cmsg_id() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.cmsg_id)
  return cmsg_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_cmsg_id() {
  // @@protoc_insertion_point(field_release:pms.Entity.cmsg_id)
  
  return cmsg_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_cmsg_id(::std::string* cmsg_id) {
  if (cmsg_id != NULL) {
    
  } else {
    
  }
  cmsg_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmsg_id);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.cmsg_id)
}

// optional string extra = 12;
void Entity::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Entity::extra() const {
  // @@protoc_insertion_point(field_get:pms.Entity.extra)
  return extra_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.Entity.extra)
}
 void Entity::set_extra(const char* value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.Entity.extra)
}
 void Entity::set_extra(const char* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.Entity.extra)
}
 ::std::string* Entity::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:pms.Entity.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Entity::release_extra() {
  // @@protoc_insertion_point(field_release:pms.Entity.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Entity::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.extra)
}

// optional uint32 msg_time = 13;
void Entity::clear_msg_time() {
  msg_time_ = 0u;
}
 ::google::protobuf::uint32 Entity::msg_time() const {
  // @@protoc_insertion_point(field_get:pms.Entity.msg_time)
  return msg_time_;
}
 void Entity::set_msg_time(::google::protobuf::uint32 value) {
  
  msg_time_ = value;
  // @@protoc_insertion_point(field_set:pms.Entity.msg_time)
}

// optional .pms.ToUser usr_toto = 14;
bool Entity::has_usr_toto() const {
  return !_is_default_instance_ && usr_toto_ != NULL;
}
void Entity::clear_usr_toto() {
  if (GetArenaNoVirtual() == NULL && usr_toto_ != NULL) delete usr_toto_;
  usr_toto_ = NULL;
}
const ::pms::ToUser& Entity::usr_toto() const {
  // @@protoc_insertion_point(field_get:pms.Entity.usr_toto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return usr_toto_ != NULL ? *usr_toto_ : *default_instance().usr_toto_;
#else
  return usr_toto_ != NULL ? *usr_toto_ : *default_instance_->usr_toto_;
#endif
}
::pms::ToUser* Entity::mutable_usr_toto() {
  
  if (usr_toto_ == NULL) {
    usr_toto_ = new ::pms::ToUser;
  }
  // @@protoc_insertion_point(field_mutable:pms.Entity.usr_toto)
  return usr_toto_;
}
::pms::ToUser* Entity::release_usr_toto() {
  // @@protoc_insertion_point(field_release:pms.Entity.usr_toto)
  
  ::pms::ToUser* temp = usr_toto_;
  usr_toto_ = NULL;
  return temp;
}
void Entity::set_allocated_usr_toto(::pms::ToUser* usr_toto) {
  delete usr_toto_;
  usr_toto_ = usr_toto;
  if (usr_toto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pms.Entity.usr_toto)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pms

// @@protoc_insertion_point(global_scope)
