// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pms {

namespace {

const ::google::protobuf::Descriptor* MsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgRep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgRep_reflection_ = NULL;
const ::google::protobuf::Descriptor* ToUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ToUser_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EServerCmd_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EModuleType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_5fmsg_2eproto() {
  protobuf_AddDesc_common_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common_msg.proto");
  GOOGLE_CHECK(file != NULL);
  MsgReq_descriptor_ = file->message_type(0);
  static const int MsgReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReq, svr_cmds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReq, mod_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReq, content_),
  };
  MsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgReq_descriptor_,
      MsgReq::default_instance_,
      MsgReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgReq, _internal_metadata_),
      -1);
  MsgRep_descriptor_ = file->message_type(1);
  static const int MsgRep_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRep, svr_cmds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRep, mod_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRep, rsp_cont_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRep, rsp_code_),
  };
  MsgRep_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgRep_descriptor_,
      MsgRep::default_instance_,
      MsgRep_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRep, _has_bits_[0]),
      -1,
      -1,
      sizeof(MsgRep),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRep, _internal_metadata_),
      -1);
  ToUser_descriptor_ = file->message_type(2);
  static const int ToUser_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToUser, users_),
  };
  ToUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ToUser_descriptor_,
      ToUser::default_instance_,
      ToUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(ToUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ToUser, _internal_metadata_),
      -1);
  EServerCmd_descriptor_ = file->enum_type(0);
  EModuleType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgReq_descriptor_, &MsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgRep_descriptor_, &MsgRep::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ToUser_descriptor_, &ToUser::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_5fmsg_2eproto() {
  delete MsgReq::default_instance_;
  delete MsgReq_reflection_;
  delete MsgRep::default_instance_;
  delete MsgRep_reflection_;
  delete ToUser::default_instance_;
  delete ToUser_reflection_;
}

void protobuf_AddDesc_common_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020common_msg.proto\022\003pms\"`\n\006MsgReq\022!\n\010svr"
    "_cmds\030\001 \001(\0162\017.pms.EServerCmd\022\"\n\010mod_type"
    "\030\002 \001(\0162\020.pms.EModuleType\022\017\n\007content\030\003 \001("
    "\014\"s\n\006MsgRep\022!\n\010svr_cmds\030\001 \001(\0162\017.pms.ESer"
    "verCmd\022\"\n\010mod_type\030\002 \001(\0162\020.pms.EModuleTy"
    "pe\022\020\n\010rsp_cont\030\003 \001(\014\022\020\n\010rsp_code\030\004 \001(\021\"\027"
    "\n\006ToUser\022\r\n\005users\030\001 \003(\t*O\n\nEServerCmd\022\n\n"
    "\006CLOGIN\020\001\022\013\n\007CSNDMSG\020\002\022\013\n\007CGETMSG\020\003\022\013\n\007C"
    "LOGOUT\020\004\022\016\n\nCKEEPALIVE\020\005*A\n\013EModuleType\022"
    "\014\n\010TMEETING\020\003\022\010\n\004TP2P\020\004\022\t\n\005TLIVE\020\005\022\017\n\013TC"
    "ALLCENTER\020\006", 411);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common_msg.proto", &protobuf_RegisterTypes);
  MsgReq::default_instance_ = new MsgReq();
  MsgRep::default_instance_ = new MsgRep();
  ToUser::default_instance_ = new ToUser();
  MsgReq::default_instance_->InitAsDefaultInstance();
  MsgRep::default_instance_->InitAsDefaultInstance();
  ToUser::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_5fmsg_2eproto {
  StaticDescriptorInitializer_common_5fmsg_2eproto() {
    protobuf_AddDesc_common_5fmsg_2eproto();
  }
} static_descriptor_initializer_common_5fmsg_2eproto_;
const ::google::protobuf::EnumDescriptor* EServerCmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EServerCmd_descriptor_;
}
bool EServerCmd_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EModuleType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EModuleType_descriptor_;
}
bool EModuleType_IsValid(int value) {
  switch(value) {
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgReq::kSvrCmdsFieldNumber;
const int MsgReq::kModTypeFieldNumber;
const int MsgReq::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgReq::MsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.MsgReq)
}

void MsgReq::InitAsDefaultInstance() {
}

MsgReq::MsgReq(const MsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.MsgReq)
}

void MsgReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  svr_cmds_ = 1;
  mod_type_ = 3;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgReq::~MsgReq() {
  // @@protoc_insertion_point(destructor:pms.MsgReq)
  SharedDtor();
}

void MsgReq::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgReq_descriptor_;
}

const MsgReq& MsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

MsgReq* MsgReq::default_instance_ = NULL;

MsgReq* MsgReq::New(::google::protobuf::Arena* arena) const {
  MsgReq* n = new MsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pms.MsgReq)
  if (_has_bits_[0 / 32] & 7u) {
    svr_cmds_ = 1;
    mod_type_ = 3;
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.MsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pms.EServerCmd svr_cmds = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pms::EServerCmd_IsValid(value)) {
            set_svr_cmds(static_cast< ::pms::EServerCmd >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mod_type;
        break;
      }

      // optional .pms.EModuleType mod_type = 2;
      case 2: {
        if (tag == 16) {
         parse_mod_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pms::EModuleType_IsValid(value)) {
            set_mod_type(static_cast< ::pms::EModuleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }

      // optional bytes content = 3;
      case 3: {
        if (tag == 26) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.MsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.MsgReq)
  return false;
#undef DO_
}

void MsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.MsgReq)
  // optional .pms.EServerCmd svr_cmds = 1;
  if (has_svr_cmds()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->svr_cmds(), output);
  }

  // optional .pms.EModuleType mod_type = 2;
  if (has_mod_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mod_type(), output);
  }

  // optional bytes content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pms.MsgReq)
}

::google::protobuf::uint8* MsgReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pms.MsgReq)
  // optional .pms.EServerCmd svr_cmds = 1;
  if (has_svr_cmds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->svr_cmds(), target);
  }

  // optional .pms.EModuleType mod_type = 2;
  if (has_mod_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mod_type(), target);
  }

  // optional bytes content = 3;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pms.MsgReq)
  return target;
}

int MsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pms.MsgReq)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .pms.EServerCmd svr_cmds = 1;
    if (has_svr_cmds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->svr_cmds());
    }

    // optional .pms.EModuleType mod_type = 2;
    if (has_mod_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mod_type());
    }

    // optional bytes content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pms.MsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pms.MsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pms.MsgReq)
    MergeFrom(*source);
  }
}

void MsgReq::MergeFrom(const MsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pms.MsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_svr_cmds()) {
      set_svr_cmds(from.svr_cmds());
    }
    if (from.has_mod_type()) {
      set_mod_type(from.mod_type());
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pms.MsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgReq::CopyFrom(const MsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pms.MsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgReq::IsInitialized() const {

  return true;
}

void MsgReq::Swap(MsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgReq::InternalSwap(MsgReq* other) {
  std::swap(svr_cmds_, other->svr_cmds_);
  std::swap(mod_type_, other->mod_type_);
  content_.Swap(&other->content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgReq_descriptor_;
  metadata.reflection = MsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgReq

// optional .pms.EServerCmd svr_cmds = 1;
bool MsgReq::has_svr_cmds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MsgReq::set_has_svr_cmds() {
  _has_bits_[0] |= 0x00000001u;
}
void MsgReq::clear_has_svr_cmds() {
  _has_bits_[0] &= ~0x00000001u;
}
void MsgReq::clear_svr_cmds() {
  svr_cmds_ = 1;
  clear_has_svr_cmds();
}
 ::pms::EServerCmd MsgReq::svr_cmds() const {
  // @@protoc_insertion_point(field_get:pms.MsgReq.svr_cmds)
  return static_cast< ::pms::EServerCmd >(svr_cmds_);
}
 void MsgReq::set_svr_cmds(::pms::EServerCmd value) {
  assert(::pms::EServerCmd_IsValid(value));
  set_has_svr_cmds();
  svr_cmds_ = value;
  // @@protoc_insertion_point(field_set:pms.MsgReq.svr_cmds)
}

// optional .pms.EModuleType mod_type = 2;
bool MsgReq::has_mod_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MsgReq::set_has_mod_type() {
  _has_bits_[0] |= 0x00000002u;
}
void MsgReq::clear_has_mod_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void MsgReq::clear_mod_type() {
  mod_type_ = 3;
  clear_has_mod_type();
}
 ::pms::EModuleType MsgReq::mod_type() const {
  // @@protoc_insertion_point(field_get:pms.MsgReq.mod_type)
  return static_cast< ::pms::EModuleType >(mod_type_);
}
 void MsgReq::set_mod_type(::pms::EModuleType value) {
  assert(::pms::EModuleType_IsValid(value));
  set_has_mod_type();
  mod_type_ = value;
  // @@protoc_insertion_point(field_set:pms.MsgReq.mod_type)
}

// optional bytes content = 3;
bool MsgReq::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MsgReq::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
void MsgReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
void MsgReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
 const ::std::string& MsgReq::content() const {
  // @@protoc_insertion_point(field_get:pms.MsgReq.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReq::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.MsgReq.content)
}
 void MsgReq::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.MsgReq.content)
}
 void MsgReq::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.MsgReq.content)
}
 ::std::string* MsgReq::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:pms.MsgReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgReq::release_content() {
  // @@protoc_insertion_point(field_release:pms.MsgReq.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:pms.MsgReq.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRep::kSvrCmdsFieldNumber;
const int MsgRep::kModTypeFieldNumber;
const int MsgRep::kRspContFieldNumber;
const int MsgRep::kRspCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRep::MsgRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.MsgRep)
}

void MsgRep::InitAsDefaultInstance() {
}

MsgRep::MsgRep(const MsgRep& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.MsgRep)
}

void MsgRep::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  svr_cmds_ = 1;
  mod_type_ = 3;
  rsp_cont_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsp_code_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MsgRep::~MsgRep() {
  // @@protoc_insertion_point(destructor:pms.MsgRep)
  SharedDtor();
}

void MsgRep::SharedDtor() {
  rsp_cont_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgRep_descriptor_;
}

const MsgRep& MsgRep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

MsgRep* MsgRep::default_instance_ = NULL;

MsgRep* MsgRep::New(::google::protobuf::Arena* arena) const {
  MsgRep* n = new MsgRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRep::Clear() {
// @@protoc_insertion_point(message_clear_start:pms.MsgRep)
  if (_has_bits_[0 / 32] & 15u) {
    svr_cmds_ = 1;
    mod_type_ = 3;
    if (has_rsp_cont()) {
      rsp_cont_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    rsp_code_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MsgRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.MsgRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pms.EServerCmd svr_cmds = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pms::EServerCmd_IsValid(value)) {
            set_svr_cmds(static_cast< ::pms::EServerCmd >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mod_type;
        break;
      }

      // optional .pms.EModuleType mod_type = 2;
      case 2: {
        if (tag == 16) {
         parse_mod_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pms::EModuleType_IsValid(value)) {
            set_mod_type(static_cast< ::pms::EModuleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rsp_cont;
        break;
      }

      // optional bytes rsp_cont = 3;
      case 3: {
        if (tag == 26) {
         parse_rsp_cont:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rsp_cont()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_rsp_code;
        break;
      }

      // optional sint32 rsp_code = 4;
      case 4: {
        if (tag == 32) {
         parse_rsp_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rsp_code_)));
          set_has_rsp_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.MsgRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.MsgRep)
  return false;
#undef DO_
}

void MsgRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.MsgRep)
  // optional .pms.EServerCmd svr_cmds = 1;
  if (has_svr_cmds()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->svr_cmds(), output);
  }

  // optional .pms.EModuleType mod_type = 2;
  if (has_mod_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mod_type(), output);
  }

  // optional bytes rsp_cont = 3;
  if (has_rsp_cont()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->rsp_cont(), output);
  }

  // optional sint32 rsp_code = 4;
  if (has_rsp_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->rsp_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pms.MsgRep)
}

::google::protobuf::uint8* MsgRep::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pms.MsgRep)
  // optional .pms.EServerCmd svr_cmds = 1;
  if (has_svr_cmds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->svr_cmds(), target);
  }

  // optional .pms.EModuleType mod_type = 2;
  if (has_mod_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mod_type(), target);
  }

  // optional bytes rsp_cont = 3;
  if (has_rsp_cont()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->rsp_cont(), target);
  }

  // optional sint32 rsp_code = 4;
  if (has_rsp_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->rsp_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pms.MsgRep)
  return target;
}

int MsgRep::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pms.MsgRep)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional .pms.EServerCmd svr_cmds = 1;
    if (has_svr_cmds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->svr_cmds());
    }

    // optional .pms.EModuleType mod_type = 2;
    if (has_mod_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mod_type());
    }

    // optional bytes rsp_cont = 3;
    if (has_rsp_cont()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rsp_cont());
    }

    // optional sint32 rsp_code = 4;
    if (has_rsp_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->rsp_code());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pms.MsgRep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MsgRep* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pms.MsgRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pms.MsgRep)
    MergeFrom(*source);
  }
}

void MsgRep::MergeFrom(const MsgRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pms.MsgRep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_svr_cmds()) {
      set_svr_cmds(from.svr_cmds());
    }
    if (from.has_mod_type()) {
      set_mod_type(from.mod_type());
    }
    if (from.has_rsp_cont()) {
      set_has_rsp_cont();
      rsp_cont_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsp_cont_);
    }
    if (from.has_rsp_code()) {
      set_rsp_code(from.rsp_code());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MsgRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pms.MsgRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRep::CopyFrom(const MsgRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pms.MsgRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRep::IsInitialized() const {

  return true;
}

void MsgRep::Swap(MsgRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRep::InternalSwap(MsgRep* other) {
  std::swap(svr_cmds_, other->svr_cmds_);
  std::swap(mod_type_, other->mod_type_);
  rsp_cont_.Swap(&other->rsp_cont_);
  std::swap(rsp_code_, other->rsp_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgRep_descriptor_;
  metadata.reflection = MsgRep_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRep

// optional .pms.EServerCmd svr_cmds = 1;
bool MsgRep::has_svr_cmds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MsgRep::set_has_svr_cmds() {
  _has_bits_[0] |= 0x00000001u;
}
void MsgRep::clear_has_svr_cmds() {
  _has_bits_[0] &= ~0x00000001u;
}
void MsgRep::clear_svr_cmds() {
  svr_cmds_ = 1;
  clear_has_svr_cmds();
}
 ::pms::EServerCmd MsgRep::svr_cmds() const {
  // @@protoc_insertion_point(field_get:pms.MsgRep.svr_cmds)
  return static_cast< ::pms::EServerCmd >(svr_cmds_);
}
 void MsgRep::set_svr_cmds(::pms::EServerCmd value) {
  assert(::pms::EServerCmd_IsValid(value));
  set_has_svr_cmds();
  svr_cmds_ = value;
  // @@protoc_insertion_point(field_set:pms.MsgRep.svr_cmds)
}

// optional .pms.EModuleType mod_type = 2;
bool MsgRep::has_mod_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MsgRep::set_has_mod_type() {
  _has_bits_[0] |= 0x00000002u;
}
void MsgRep::clear_has_mod_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void MsgRep::clear_mod_type() {
  mod_type_ = 3;
  clear_has_mod_type();
}
 ::pms::EModuleType MsgRep::mod_type() const {
  // @@protoc_insertion_point(field_get:pms.MsgRep.mod_type)
  return static_cast< ::pms::EModuleType >(mod_type_);
}
 void MsgRep::set_mod_type(::pms::EModuleType value) {
  assert(::pms::EModuleType_IsValid(value));
  set_has_mod_type();
  mod_type_ = value;
  // @@protoc_insertion_point(field_set:pms.MsgRep.mod_type)
}

// optional bytes rsp_cont = 3;
bool MsgRep::has_rsp_cont() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MsgRep::set_has_rsp_cont() {
  _has_bits_[0] |= 0x00000004u;
}
void MsgRep::clear_has_rsp_cont() {
  _has_bits_[0] &= ~0x00000004u;
}
void MsgRep::clear_rsp_cont() {
  rsp_cont_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rsp_cont();
}
 const ::std::string& MsgRep::rsp_cont() const {
  // @@protoc_insertion_point(field_get:pms.MsgRep.rsp_cont)
  return rsp_cont_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRep::set_rsp_cont(const ::std::string& value) {
  set_has_rsp_cont();
  rsp_cont_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.MsgRep.rsp_cont)
}
 void MsgRep::set_rsp_cont(const char* value) {
  set_has_rsp_cont();
  rsp_cont_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.MsgRep.rsp_cont)
}
 void MsgRep::set_rsp_cont(const void* value, size_t size) {
  set_has_rsp_cont();
  rsp_cont_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.MsgRep.rsp_cont)
}
 ::std::string* MsgRep::mutable_rsp_cont() {
  set_has_rsp_cont();
  // @@protoc_insertion_point(field_mutable:pms.MsgRep.rsp_cont)
  return rsp_cont_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgRep::release_rsp_cont() {
  // @@protoc_insertion_point(field_release:pms.MsgRep.rsp_cont)
  clear_has_rsp_cont();
  return rsp_cont_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgRep::set_allocated_rsp_cont(::std::string* rsp_cont) {
  if (rsp_cont != NULL) {
    set_has_rsp_cont();
  } else {
    clear_has_rsp_cont();
  }
  rsp_cont_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rsp_cont);
  // @@protoc_insertion_point(field_set_allocated:pms.MsgRep.rsp_cont)
}

// optional sint32 rsp_code = 4;
bool MsgRep::has_rsp_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MsgRep::set_has_rsp_code() {
  _has_bits_[0] |= 0x00000008u;
}
void MsgRep::clear_has_rsp_code() {
  _has_bits_[0] &= ~0x00000008u;
}
void MsgRep::clear_rsp_code() {
  rsp_code_ = 0;
  clear_has_rsp_code();
}
 ::google::protobuf::int32 MsgRep::rsp_code() const {
  // @@protoc_insertion_point(field_get:pms.MsgRep.rsp_code)
  return rsp_code_;
}
 void MsgRep::set_rsp_code(::google::protobuf::int32 value) {
  set_has_rsp_code();
  rsp_code_ = value;
  // @@protoc_insertion_point(field_set:pms.MsgRep.rsp_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToUser::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToUser::ToUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pms.ToUser)
}

void ToUser::InitAsDefaultInstance() {
}

ToUser::ToUser(const ToUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pms.ToUser)
}

void ToUser::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ToUser::~ToUser() {
  // @@protoc_insertion_point(destructor:pms.ToUser)
  SharedDtor();
}

void ToUser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ToUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ToUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ToUser_descriptor_;
}

const ToUser& ToUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_5fmsg_2eproto();
  return *default_instance_;
}

ToUser* ToUser::default_instance_ = NULL;

ToUser* ToUser::New(::google::protobuf::Arena* arena) const {
  ToUser* n = new ToUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ToUser::Clear() {
// @@protoc_insertion_point(message_clear_start:pms.ToUser)
  users_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ToUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pms.ToUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string users = 1;
      case 1: {
        if (tag == 10) {
         parse_users:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_users()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->users(this->users_size() - 1).data(),
            this->users(this->users_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pms.ToUser.users");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_users;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pms.ToUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pms.ToUser)
  return false;
#undef DO_
}

void ToUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pms.ToUser)
  // repeated string users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->users(i).data(), this->users(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pms.ToUser.users");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->users(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pms.ToUser)
}

::google::protobuf::uint8* ToUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pms.ToUser)
  // repeated string users = 1;
  for (int i = 0; i < this->users_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->users(i).data(), this->users(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pms.ToUser.users");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->users(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pms.ToUser)
  return target;
}

int ToUser::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pms.ToUser)
  int total_size = 0;

  // repeated string users = 1;
  total_size += 1 * this->users_size();
  for (int i = 0; i < this->users_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->users(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ToUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pms.ToUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ToUser* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ToUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pms.ToUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pms.ToUser)
    MergeFrom(*source);
  }
}

void ToUser::MergeFrom(const ToUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pms.ToUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  users_.MergeFrom(from.users_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ToUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pms.ToUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToUser::CopyFrom(const ToUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pms.ToUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToUser::IsInitialized() const {

  return true;
}

void ToUser::Swap(ToUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToUser::InternalSwap(ToUser* other) {
  users_.UnsafeArenaSwap(&other->users_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ToUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ToUser_descriptor_;
  metadata.reflection = ToUser_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ToUser

// repeated string users = 1;
int ToUser::users_size() const {
  return users_.size();
}
void ToUser::clear_users() {
  users_.Clear();
}
 const ::std::string& ToUser::users(int index) const {
  // @@protoc_insertion_point(field_get:pms.ToUser.users)
  return users_.Get(index);
}
 ::std::string* ToUser::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:pms.ToUser.users)
  return users_.Mutable(index);
}
 void ToUser::set_users(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pms.ToUser.users)
  users_.Mutable(index)->assign(value);
}
 void ToUser::set_users(int index, const char* value) {
  users_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pms.ToUser.users)
}
 void ToUser::set_users(int index, const char* value, size_t size) {
  users_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pms.ToUser.users)
}
 ::std::string* ToUser::add_users() {
  // @@protoc_insertion_point(field_add_mutable:pms.ToUser.users)
  return users_.Add();
}
 void ToUser::add_users(const ::std::string& value) {
  users_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pms.ToUser.users)
}
 void ToUser::add_users(const char* value) {
  users_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pms.ToUser.users)
}
 void ToUser::add_users(const char* value, size_t size) {
  users_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pms.ToUser.users)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
ToUser::users() const {
  // @@protoc_insertion_point(field_list:pms.ToUser.users)
  return users_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
ToUser::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:pms.ToUser.users)
  return &users_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pms

// @@protoc_insertion_point(global_scope)
