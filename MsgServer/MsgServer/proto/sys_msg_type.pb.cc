// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys_msg_type.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sys_msg_type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pms {

namespace {

const ::google::protobuf::EnumDescriptor* ETransferModule_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ETransferType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ETransferPriority_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ETransferFlag_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EConnTag_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EConnType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_sys_5fmsg_5ftype_2eproto() {
  protobuf_AddDesc_sys_5fmsg_5ftype_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sys_msg_type.proto");
  GOOGLE_CHECK(file != NULL);
  ETransferModule_descriptor_ = file->enum_type(0);
  ETransferType_descriptor_ = file->enum_type(1);
  ETransferPriority_descriptor_ = file->enum_type(2);
  ETransferFlag_descriptor_ = file->enum_type(3);
  EConnTag_descriptor_ = file->enum_type(4);
  EConnType_descriptor_ = file->enum_type(5);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sys_5fmsg_5ftype_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_sys_5fmsg_5ftype_2eproto() {
}

void protobuf_AddDesc_sys_5fmsg_5ftype_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022sys_msg_type.proto\022\003pms*d\n\017ETransferMo"
    "dule\022\016\n\nMCONNECTOR\020\001\022\r\n\tMMSGQUEUE\020\002\022\014\n\010M"
    "MEETING\020\003\022\010\n\004MP2P\020\004\022\t\n\005MLIVE\020\005\022\017\n\013MCALLC"
    "ENTER\020\006*e\n\rETransferType\022\t\n\005TCONN\020\001\022\n\n\006T"
    "TRANS\020\002\022\n\n\006TQUEUE\020\003\022\r\n\tTDISPATCH\020\004\022\t\n\005TP"
    "USH\020\005\022\n\n\006TLOGIN\020\006\022\013\n\007TLOGOUT\020\007*5\n\021ETrans"
    "ferPriority\022\010\n\004PLOW\020\001\022\013\n\007PNORMAL\020\002\022\t\n\005PH"
    "IGH\020\003*3\n\rETransferFlag\022\n\n\006FNOACK\020\001\022\014\n\010FN"
    "EEDACK\020\002\022\010\n\004FACK\020\003*=\n\010EConnTag\022\007\n\003THI\020\001\022"
    "\n\n\006THELLO\020\002\022\014\n\010THELLOHI\020\003\022\016\n\nTKEEPALIVE\020"
    "\004* \n\tEConnType\022\010\n\004TTCP\020\001\022\t\n\005THTTP\020\002", 435);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sys_msg_type.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sys_5fmsg_5ftype_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sys_5fmsg_5ftype_2eproto {
  StaticDescriptorInitializer_sys_5fmsg_5ftype_2eproto() {
    protobuf_AddDesc_sys_5fmsg_5ftype_2eproto();
  }
} static_descriptor_initializer_sys_5fmsg_5ftype_2eproto_;
const ::google::protobuf::EnumDescriptor* ETransferModule_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETransferModule_descriptor_;
}
bool ETransferModule_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ETransferType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETransferType_descriptor_;
}
bool ETransferType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ETransferPriority_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETransferPriority_descriptor_;
}
bool ETransferPriority_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ETransferFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ETransferFlag_descriptor_;
}
bool ETransferFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EConnTag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EConnTag_descriptor_;
}
bool EConnTag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EConnType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EConnType_descriptor_;
}
bool EConnType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pms

// @@protoc_insertion_point(global_scope)
