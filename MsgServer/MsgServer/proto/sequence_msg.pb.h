// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sequence_msg.proto

#ifndef PROTOBUF_sequence_5fmsg_2eproto__INCLUDED
#define PROTOBUF_sequence_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace pms {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sequence_5fmsg_2eproto();
void protobuf_AssignDesc_sequence_5fmsg_2eproto();
void protobuf_ShutdownFile_sequence_5fmsg_2eproto();

class PackedSeqnMsg;
class SequenceMsg;

// ===================================================================

class SequenceMsg : public ::google::protobuf::MessageLite {
 public:
  SequenceMsg();
  virtual ~SequenceMsg();

  SequenceMsg(const SequenceMsg& from);

  inline SequenceMsg& operator=(const SequenceMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const SequenceMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SequenceMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SequenceMsg* other);

  // implements Message ----------------------------------------------

  inline SequenceMsg* New() const { return New(NULL); }

  SequenceMsg* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SequenceMsg& from);
  void MergeFrom(const SequenceMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SequenceMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // optional string msgid = 2;
  void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  const ::std::string& msgid() const;
  void set_msgid(const ::std::string& value);
  void set_msgid(const char* value);
  void set_msgid(const char* value, size_t size);
  ::std::string* mutable_msgid();
  ::std::string* release_msgid();
  void set_allocated_msgid(::std::string* msgid);

  // optional sint64 sequence = 3;
  void clear_sequence();
  static const int kSequenceFieldNumber = 3;
  ::google::protobuf::int64 sequence() const;
  void set_sequence(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pms.SequenceMsg)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr msgid_;
  ::google::protobuf::int64 sequence_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_sequence_5fmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_sequence_5fmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_sequence_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_sequence_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static SequenceMsg* default_instance_;
};
// -------------------------------------------------------------------

class PackedSeqnMsg : public ::google::protobuf::MessageLite {
 public:
  PackedSeqnMsg();
  virtual ~PackedSeqnMsg();

  PackedSeqnMsg(const PackedSeqnMsg& from);

  inline PackedSeqnMsg& operator=(const PackedSeqnMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const PackedSeqnMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PackedSeqnMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PackedSeqnMsg* other);

  // implements Message ----------------------------------------------

  inline PackedSeqnMsg* New() const { return New(NULL); }

  PackedSeqnMsg* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PackedSeqnMsg& from);
  void MergeFrom(const PackedSeqnMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PackedSeqnMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pms.SequenceMsg msgs = 1;
  int msgs_size() const;
  void clear_msgs();
  static const int kMsgsFieldNumber = 1;
  const ::pms::SequenceMsg& msgs(int index) const;
  ::pms::SequenceMsg* mutable_msgs(int index);
  ::pms::SequenceMsg* add_msgs();
  ::google::protobuf::RepeatedPtrField< ::pms::SequenceMsg >*
      mutable_msgs();
  const ::google::protobuf::RepeatedPtrField< ::pms::SequenceMsg >&
      msgs() const;

  // @@protoc_insertion_point(class_scope:pms.PackedSeqnMsg)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::pms::SequenceMsg > msgs_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_sequence_5fmsg_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_sequence_5fmsg_2eproto();
  #endif
  friend void protobuf_AssignDesc_sequence_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_sequence_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static PackedSeqnMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SequenceMsg

// optional string userid = 1;
inline void SequenceMsg::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SequenceMsg::userid() const {
  // @@protoc_insertion_point(field_get:pms.SequenceMsg.userid)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SequenceMsg::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.SequenceMsg.userid)
}
inline void SequenceMsg::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.SequenceMsg.userid)
}
inline void SequenceMsg::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.SequenceMsg.userid)
}
inline ::std::string* SequenceMsg::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:pms.SequenceMsg.userid)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SequenceMsg::release_userid() {
  // @@protoc_insertion_point(field_release:pms.SequenceMsg.userid)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SequenceMsg::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:pms.SequenceMsg.userid)
}

// optional string msgid = 2;
inline void SequenceMsg::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SequenceMsg::msgid() const {
  // @@protoc_insertion_point(field_get:pms.SequenceMsg.msgid)
  return msgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SequenceMsg::set_msgid(const ::std::string& value) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pms.SequenceMsg.msgid)
}
inline void SequenceMsg::set_msgid(const char* value) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pms.SequenceMsg.msgid)
}
inline void SequenceMsg::set_msgid(const char* value, size_t size) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pms.SequenceMsg.msgid)
}
inline ::std::string* SequenceMsg::mutable_msgid() {
  
  // @@protoc_insertion_point(field_mutable:pms.SequenceMsg.msgid)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SequenceMsg::release_msgid() {
  // @@protoc_insertion_point(field_release:pms.SequenceMsg.msgid)
  
  return msgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SequenceMsg::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    
  } else {
    
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:pms.SequenceMsg.msgid)
}

// optional sint64 sequence = 3;
inline void SequenceMsg::clear_sequence() {
  sequence_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SequenceMsg::sequence() const {
  // @@protoc_insertion_point(field_get:pms.SequenceMsg.sequence)
  return sequence_;
}
inline void SequenceMsg::set_sequence(::google::protobuf::int64 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:pms.SequenceMsg.sequence)
}

// -------------------------------------------------------------------

// PackedSeqnMsg

// repeated .pms.SequenceMsg msgs = 1;
inline int PackedSeqnMsg::msgs_size() const {
  return msgs_.size();
}
inline void PackedSeqnMsg::clear_msgs() {
  msgs_.Clear();
}
inline const ::pms::SequenceMsg& PackedSeqnMsg::msgs(int index) const {
  // @@protoc_insertion_point(field_get:pms.PackedSeqnMsg.msgs)
  return msgs_.Get(index);
}
inline ::pms::SequenceMsg* PackedSeqnMsg::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:pms.PackedSeqnMsg.msgs)
  return msgs_.Mutable(index);
}
inline ::pms::SequenceMsg* PackedSeqnMsg::add_msgs() {
  // @@protoc_insertion_point(field_add:pms.PackedSeqnMsg.msgs)
  return msgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pms::SequenceMsg >*
PackedSeqnMsg::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:pms.PackedSeqnMsg.msgs)
  return &msgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pms::SequenceMsg >&
PackedSeqnMsg::msgs() const {
  // @@protoc_insertion_point(field_list:pms.PackedSeqnMsg.msgs)
  return msgs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pms

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sequence_5fmsg_2eproto__INCLUDED
